---
import { getAllUsers } from '../api/services/userService';
import Welcome from '../components/Welcome.astro';
import Layout from '../layouts/Layout.astro';
// import { server } from 'astro/server';

// Welcome to Astro! Wondering what to do next? Check out the Astro documentation at https://docs.astro.build
// Don't want to use any of this? Delete everything in this file, the `assets`, `components`, and `layouts` directories, and start fresh.

const users = await getAllUsers();

// const addUser = server.action(async (formData: FormData) => {
//   const name = formData.get("name")?.toString().trim();
//   const email = formData.get("email")?.toString().trim();

//   if (!name || !email) {
//     throw new Error("Both name and email are required");
//   }

//   // call backend service directly (no HTTP fetch)
//   // await createUser(name, email);
// });


---

<Layout>
	<Welcome />
	<ul>
		{users.map((u) => (<li>{u.name} - {u.email}</li>))}	
	</ul>
  <button id="create-user-btn">create dummy user</button>
	<!-- <form method="post" use:action={addUser}>
		<div>
          <input
            type="text"
            name="name"
            placeholder="Name"
            class="border rounded p-2 w-full"
          />
        </div>
        <div>
          <input
            type="email"
            name="email"
            placeholder="Email"
            class="border rounded p-2 w-full"
          />
        </div>
        <button
          type="submit"
          class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          Add User
        </button>
	</form> -->
</Layout>

<script>
    import { actions } from "astro:actions";

    const button = document.getElementById('create-user-btn');
    button?.addEventListener('click', async () => {
      // Show alert pop-up with greeting from action
      const { data, error } = await actions.createUser({ name: 'Peter', email: 'peter@email.com' });
      console.log(data);
    });
</script>

<style lang="scss">
	form {
		margin-top: 20px;
	}
</style>
